# Generated by Django 5.1.1

from django.db import migrations, connection

def reset_sequences(apps, schema_editor):
    if connection.vendor == 'postgresql':
        all_models = apps.get_models()
        with connection.cursor() as cursor:
            for model in all_models:
                table_name = model._meta.db_table
                if not model._meta.managed:
                    continue
                if 'id' not in [field.name for field in model._meta.fields]:
                    continue

                sql = f"""
                SELECT setval(
                    pg_get_serial_sequence('"{table_name}"', 'id'),
                    COALESCE((SELECT MAX(id) + 1 FROM "{table_name}"), 1),
                    false
                );
                """
                try:
                    cursor.execute(sql)
                except Exception:
                    # This might fail for tables without sequences, which is fine.
                    pass

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
        ('menu', '0001_initial'),
        ('orders', '0002_initial'),
        ('reservations', '0001_initial'),
        ('payments', '0001_initial'),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(reset_sequences, reverse_code=migrations.RunPython.noop),
    ]
